{"version":3,"sources":["D:/mail/New folder/src async","D:/mail/New folder/src/app/app-routing.module.ts","D:/mail/New folder/src/app/app.component.css","D:/mail/New folder/src/app/app.component.html","D:/mail/New folder/src/app/app.component.ts","D:/mail/New folder/src/app/app.module.ts","D:/mail/New folder/src/app/book-flight/book-flight.component.css","D:/mail/New folder/src/app/book-flight/book-flight.component.html","D:/mail/New folder/src/app/book-flight/book-flight.component.ts","D:/mail/New folder/src/app/book-flight/book-flight.service.ts","D:/mail/New folder/src/app/book-flight/passenger-name.validator.ts","D:/mail/New folder/src/app/book-flight/success-message.pipe.ts","D:/mail/New folder/src/app/create-new-request/new-request.component.css","D:/mail/New folder/src/app/create-new-request/new-request.component.html","D:/mail/New folder/src/app/create-new-request/new-request.component.ts","D:/mail/New folder/src/app/create-new-request/new-request.service.ts","D:/mail/New folder/src/app/more-info/more-info.component.css","D:/mail/New folder/src/app/more-info/more-info.component.html","D:/mail/New folder/src/app/more-info/more-info.component.ts","D:/mail/New folder/src/app/more-info/more-info.service.ts","D:/mail/New folder/src/environments/environment.ts","D:/mail/New folder/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookFlightComponent } from './book-flight/book-flight.component';\nimport { CreateNewRequestComponent } from './create-new-request/new-request.component';\nimport { MoreInfoComponent } from './more-info/more-info.component';\n\nexport const routes: Routes = [\n   { path: 'newRequest', component: CreateNewRequestComponent },\n    { path: 'moreInfo', component: MoreInfoComponent },\n  // { path: 'newRequest', component: BookFlightComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<!-- text-align: center; -->\\n<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Google Cloud</a>\\n    </div>\\n    <!-- <ul class=\\\"nav navbar-nav\\\"> -->\\n      <!-- <h1>\\n      <li>\\n        <a [routerLink]=\\\"['/book']\\\">Book Flight</a>\\n      </li>\\n      <h1> -->\\n    <!-- </ul> -->\\n  </div>\\n</nav>\\n<h5>\\n  <ol>\\n    <a [routerLink]=\\\"['/newRequest']\\\" style=\\\"color:white\\\">Create new Google Cloud request</a> <br><br>\\n    <a [routerLink]=\\\"['/moreInfo']\\\" style=\\\"color:white\\\">Need more Information</a> <br><br>\\n    <a [routerLink]=\\\"['/cloudAdministration']\\\" style=\\\"color:white\\\">Cloud Administration</a>\\n  </ol>\\n</h5>\\n<div class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/app.component.ts","import { BookFlightService } from './book-flight/book-flight.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BookFlightComponent } from './book-flight/book-flight.component';\nimport { HttpModule } from \"@angular/http\";\nimport { SuccessMessagePipe } from \"./book-flight/success-message.pipe\";\nimport { CreateNewRequestComponent } from './create-new-request/new-request.component';\nimport { MoreInfoComponent } from './more-info/more-info.component';\nimport { MoreInfoService } from './more-info/more-info.service';\nimport { NewRequestService } from './create-new-request/new-request.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookFlightComponent,\n    CreateNewRequestComponent,\n    MoreInfoComponent,\n    SuccessMessagePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [BookFlightService,MoreInfoService,NewRequestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".panel-heading {\\r\\n    text-align: center;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src/app/book-flight/book-flight.component.css\n// module id = ../../../../../src/app/book-flight/book-flight.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5 col-md-offset-4\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">Book the123 Flight</div>\\n      <div class=\\\"panel-body\\\">\\n\\n        <form [formGroup]=\\\"bookingForm\\\" (ngSubmit)=\\\"book()\\\" class=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"passangerName\\\">Passenger Name:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"passengerName\\\" id=\\\"passangerName\\\">\\n            <span id=\\\"passengerNameError\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.passengerName.valid && bookingForm.controls.passengerName.dirty\\\">The name should contain only characters and use expantion for initials</span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"noOfTickets\\\">Number of Tickets:</label>\\n            <input type=\\\"number\\\" step=\\\"1\\\" class=\\\"form-control\\\" formControlName=\\\"noOfTickets\\\" id=\\\"noOfTickets\\\">{{noOfTickets}}\\n            <span id=\\\"noOfTicketsError\\\" class=\\\"error-message\\\"  *ngIf=\\\"!bookingForm.controls.noOfTickets.valid && bookingForm.controls.noOfTickets.dirty\\\">Enter the number of tickets greater than 0</span>\\n          </div>\\n          <div class=\\\"form-group\\\" formGroupName=\\\"flights\\\">\\n            <label for=\\\"flightId\\\">Flight Id:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"flightId\\\" id=\\\"flightId\\\">\\n            <span id=\\\"flightIdError\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.flights.controls.flightId.valid && bookingForm.controls.flights.controls.flightId.dirty\\\">Enter the 4 digit flightId</span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!bookingForm.valid\\\">Book</button>\\n          </div>\\n        </form>\\n\\n        <div *ngIf=\\\"errorMessage!=null\\\">\\n          <span class=\\\"text-danger\\\">{{errorMessage}}</span>\\n        </div>\\n        <div *ngIf=\\\"bookingId!=null\\\">\\n          <!-- <span class=\\\"text-success\\\">{{successMessage}}</span> -->\\n          <span class=\\\"text-success\\\">{{bookingId|successMessagePipe}}</span>\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src/app/book-flight/book-flight.component.html\n// module id = ../../../../../src/app/book-flight/book-flight.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { BookFlightService } from './book-flight.service';\nimport { PassengerNameValidator } from './passenger-name.validator';\n\n@Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})\nexport class BookFlightComponent implements OnInit {\n\n  errorMessage: string;\n  successMessage: string;\n  bookingId: string;\n  bookingForm: FormGroup;\n  \n  constructor(private fb: FormBuilder, private bookFlightService: BookFlightService) { }\n\n  ngOnInit() {\n    this.bookingForm = this.fb.group({\n      passengerName: ['', [Validators.required, PassengerNameValidator.checkName]],\n      noOfTickets: ['', [Validators.required, Validators.min(1)]],\n      flights: this.fb.group({\n        flightId: ['', [Validators.required, Validators.pattern('[0-9]{4}')]]\n      })\n    });\n  }\n\n  book() {\n    this.successMessage = null;\n    this.errorMessage = null;\n    this.bookingId = null;\n    console.log(JSON.stringify(this.bookingForm.value));\n    this.bookFlightService.book(this.bookingForm.value)\n      .then(response => {\n        console.log(response)\n        this.bookingId = response.bookingId;\n      })\n      .catch(error => {\n        this.errorMessage = error.message;\n      })\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/book-flight/book-flight.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class BookFlightService {\n\n  constructor(private http: Http) { }\n\n  book(data):Promise<any> {\n    return this.http.post('http://localhost:8300/FlightBooking_BackEnd/flight/booking', data)\n      .toPromise()\n      .then(response => response.json())\n      .catch(this.handleError);\n  }\n\n  handleError(error){\n    return Promise.reject(error.json() || error);\n  }\n\n}   \n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/book-flight/book-flight.service.ts","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport class PassengerNameValidator {\r\n    static checkName(name: AbstractControl) {\r\n        let value = \"\" + name.value;\r\n        if (value.match('^[A-Za-z ]+$')) {\r\n            let names = value.split(\" \");\r\n            for (let i = 0; i < names.length; i++) {\r\n                if (names[i].trim().length == 1) {\r\n                    return { \"checkName\": true };\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return { \"checkName\": true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/book-flight/passenger-name.validator.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'successMessagePipe'})\r\nexport class SuccessMessagePipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    let message = \"Successfully registered with bookingId : \";\r\n    return message+value;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/book-flight/success-message.pipe.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".panel-heading {\\r\\n    text-align: center;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src/app/create-new-request/new-request.component.css\n// module id = ../../../../../src/app/create-new-request/new-request.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5 col-md-offset-4\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">New Request</div>\\n        <div class=\\\"panel-body\\\">\\n\\n         <form [formGroup]=\\\"bookingForm\\\" (ngSubmit)=\\\"book()\\\" class=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"applicationName\\\">Application Name:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"applicationName\\\">\\n              <div id=\\\"applicationNameerror\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.applicationName.valid\\n              && bookingForm.controls.applicationName.dirty\\\">Enter Valid Application ID</div>\\n            </div>\\n\\n\\n             <div class=\\\"form-group\\\">\\n              <label for=\\\"projectCode\\\">Project Code:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"projectCode\\\" id=\\\"projectCode\\\">\\n              <div id=\\\"projectCode\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.projectCode.valid\\n              && bookingForm.controls.projectCode.dirty\\\">Enter Valid Project Code</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"environment\\\">Environment type:</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"environment\\\" id=\\\"environment\\\">\\n                  <option *ngFor='let environment of environmentTypeList' value=\\\"environment\\\">{{environment}}</option>\\n                  <div id=\\\"projectCode\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.projectCode.valid\\n                  && bookingForm.controls.projectCode.dirty\\\">Enter Valid Environment type</div>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"requestOwner\\\">Request Owner:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"requestOwner\\\" id=\\\"requestOwner\\\">\\n              <div id=\\\"requestOwner\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.requestOwner.valid\\n              && bookingForm.controls.requestOwner.dirty\\\">Enter Valid Request Owner</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"risk\\\">Please provide Risk/Security Information</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"risk\\\" id=\\\"risk\\\">\\n                  <option *ngFor='let risk of riskList' value=\\\"risk\\\">{{risk}}</option>\\n                \\n                  <div id=\\\"risk\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.risk.valid\\n                  && bookingForm.controls.risk.dirty\\\">Enter Valid Risk/Security Information</div>\\n                </select>\\n            </div>\\n    \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"partner\\\">Partner/Sponsor Information:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"partner\\\" id=\\\"partner\\\">\\n              <div id=\\\"partner\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.partner.valid\\n              && bookingForm.controls.partner.dirty\\\">Enter Valid Partner/Sponsor Information</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"services\\\">What GCP services you require</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"services\\\" id=\\\"services\\\">\\n                  <option *ngFor='let services of servicesList' value=\\\"services\\\">{{services}}</option>\\n                  <div id=\\\"services\\\" class=\\\"error-message\\\" *ngIf=\\\"!bookingForm.controls.services.valid\\n                  && bookingForm.controls.services.dirty\\\">Enter Valid GCP services you require</div>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!bookingForm.valid || bookingForm.pristine\\\">Book</button>\\n            </div>\\n          </form> \\n\\n         <div *ngIf=\\\"errorMessage!=null\\\">\\n          <div class=\\\"text-danger\\\">{{errorMessage}}</div>\\n        </div>\\n        <!-- <div *ngIf=\\\"bookingId!=null\\\">\\n          <div class=\\\"text-success\\\">{{successMessage}}</div>\\n          <div class=\\\"text-success\\\">{{bookingId|successMessagePipe}}</div>\\n        </div>  -->\\n        <div *ngIf=\\\"applicationName!=null\\\">\\n            <div class=\\\"text-success\\\">{{successMessage}}</div>\\n            <div class=\\\"text-success\\\">{{applicationName|successMessagePipe}}</div>\\n          </div> \\n        \\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src/app/create-new-request/new-request.component.html\n// module id = ../../../../../src/app/create-new-request/new-request.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { PassengerNameValidator } from './passenger-name.validator';\nimport { NewRequestService } from './new-request.service';\n\n@Component({\n  selector: 'app-create-new-request',\n  templateUrl: './new-request.component.html',\n  styleUrls: ['./new-request.component.css']\n})\nexport class CreateNewRequestComponent implements OnInit {\n\n  errorMessage: string;\n  successMessage: string;\n  bookingId: string;\n  bookingForm: FormGroup;\n  environmentTypeList:string[]=['Dev', 'Stage', 'Prod'];\n  riskList:string[]=['Public', 'Internal', 'Confidential', 'Highly Confidential'];\n  servicesList:string[]=['Google Compute Engine', 'Google App Engine', 'Google Cloud Storage',\n  'Google Cloud SQL', 'Google Big Query', 'Google Container Engine', 'Big Data'];\n  \n  constructor(private fb: FormBuilder, private newRequestService: NewRequestService) { }\n\n  ngOnInit() {\n    this.bookingForm = this.fb.group({\n      applicationName: ['', [Validators.required]],\n      projectCode: ['', [Validators.required]],\n      environment: ['', [Validators.required]],\n      requestOwner: ['', [Validators.required]],\n      risk: ['', [Validators.required]],\n      partner: ['', [Validators.required]],\n      services:  ['', [Validators.required]]\n      // noOfTickets: ['', [Validators.required, Validators.min(1)]],\n      // flights: this.fb.group({\n      // flightId: ['', [Validators.required, Validators.pattern('[0-9]{4}')]]\n      // })\n    });\n  }\n\n  book() {\n    this.successMessage = null;\n    this.errorMessage = null;\n    this.bookingId = null;\n    console.log(JSON.stringify(this.bookingForm.value));\n    this.newRequestService.book(this.bookingForm.value)\n      .then(response => {\n        console.log(response)\n        this.bookingId = response.bookingId;\n      })\n      .catch(error => {\n        this.errorMessage = error.message;\n      })\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/create-new-request/new-request.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class NewRequestService {\n\n  constructor(private http: Http) { }\n\n  book(data):Promise<any> {\n    return this.http.post('http://localhost:8300/FlightBooking_BackEnd/flight/booking', data)\n      .toPromise()\n      .then(response => response.json())\n      .catch(this.handleError);\n  }\n\n  handleError(error){\n    return Promise.reject(error.json() || error);\n  }\n\n}   \n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/create-new-request/new-request.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".panel-heading {\\r\\n    text-align: center;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src/app/more-info/more-info.component.css\n// module id = ../../../../../src/app/more-info/more-info.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"container\\\" style=\\\"color:white\\\"><br>\\n      Write Here for more Information........\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/mail/New folder/src/app/more-info/more-info.component.html\n// module id = ../../../../../src/app/more-info/more-info.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MoreInfoService } from './more-info.service';\nimport { PassengerNameValidator } from './passenger-name.validator';\n\n@Component({\n  selector: 'app-more-info',\n  templateUrl: './more-info.component.html',\n  styleUrls: ['./more-info.component.css']\n})\nexport class MoreInfoComponent implements OnInit {\n\n  errorMessage: string;\n  successMessage: string;\n  \n  constructor(private fb: FormBuilder, private moreInfoService: MoreInfoService) { }\n\n  ngOnInit() {\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/more-info/more-info.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class MoreInfoService {\n\n  constructor(private http: Http) { }\n\n  book(data):Promise<any> {\n    return this.http.post('http://localhost:8300/FlightBooking_BackEnd/flight/booking', data)\n      .toPromise()\n      .then(response => response.json())\n      .catch(this.handleError);\n  }\n\n  handleError(error){\n    return Promise.reject(error.json() || error);\n  }\n\n}   \n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/app/more-info/more-info.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  urlServices: 'http://8080'\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// D:/mail/New folder/src/main.ts"],"sourceRoot":"webpack:///"}